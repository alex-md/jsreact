{"mappings":"ACCA,IAAI,EAAS,SAAS,aAAa,CAAC,SACpC,CAAA,EAAO,KAAK,CAAC,OAAO,CAAG,OACvB,EAAO,KAAK,CAAC,QAAQ,CAAG,WACxB,EAAO,KAAK,CAAC,MAAM,CAAG,IACtB,EAAO,KAAK,CAAC,KAAK,CAAG,OAGrB,IAAI,EAAS,SAAS,aAAa,CAAC,MACpC,CAAA,EAAO,KAAK,CAAC,OAAO,CAAG,OACvB,EAAO,KAAK,CAAC,cAAc,CAAG,WAC9B,EAAO,KAAK,CAAC,MAAM,CAAG,SAGtB,IAAI,EAAS,SAAS,aAAa,CAAC,MACpC,CAAA,EAAO,KAAK,CAAC,IAAI,CAAG,WAGpB,IAAI,EAAS,SAAS,aAAa,CAAC,MACpC,CAAA,EAAO,KAAK,CAAC,eAAe,CAAG,cAC/B,EAAO,KAAK,CAAC,KAAK,CAAG,UACrB,EAAO,KAAK,CAAC,MAAM,CAAG,IACtB,EAAO,EAAE,CAAG,kBAGZ,IAAI,EAAS,SAAS,aAAa,CAAC,OAYpC,eAAe,IACX,GAAI,CACA,IAAM,EAAW,MAAM,MAAM,gCAC7B,GAAI,CAAC,EAAS,EAAE,CACZ,MAAM,AAAI,MAAM,CAAC,oBAAoB,EAAE,EAAS,MAAM,CAAC,CAAC,EAG5D,OADa,MAAM,EAAS,IAAI,EAEpC,CAAE,MAAO,EAAO,CAEZ,OADA,QAAQ,KAAK,CAAC,6BAA8B,GACrC,aACX,CACJ,CArBA,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GACnB,EAAO,WAAW,CAAC,GAGnB,SAAS,IAAI,CAAC,WAAW,CAAC,GAwBtB,IAAiB,IAAI,CAAC,AAAA,IAGlB,AAFsB,SAAS,cAAc,CAAC,mBAE9B,WAAW,CAAG,CAAC,OAAO,EARnC,AAQsD,EAR/C,QAAQ,GAAG,OAAO,CAAC,wBAAyB,KAQc,CAAC,AACzE","sources":["<anon>","src/components/footer.js"],"sourcesContent":["// Create footer element\nvar footer = document.createElement(\"footer\");\nfooter.style.padding = \"1rem\";\nfooter.style.position = \"relative\";\nfooter.style.bottom = \"0\";\nfooter.style.width = \"100%\";\n// Create div for row\nvar rowDiv = document.createElement(\"div\");\nrowDiv.style.display = \"flex\";\nrowDiv.style.justifyContent = \"flex-end\";\nrowDiv.style.margin = \"0.5rem\";\n// Create div for column\nvar colDiv = document.createElement(\"div\");\ncolDiv.style.flex = \"0 0 auto\";\n// Create button\nvar button = document.createElement(\"div\");\nbutton.style.backgroundColor = \"transparent\";\nbutton.style.color = \"#6c757d\";\nbutton.style.border = \"0\";\nbutton.id = \"viewCountButton\"; // Add an id to the button for later reference\n// Create anchor\nvar anchor = document.createElement(\"div\");\n// Append elements\nbutton.appendChild(anchor);\ncolDiv.appendChild(button);\nrowDiv.appendChild(colDiv);\nfooter.appendChild(rowDiv);\n// Append footer to body (or any other parent element)\ndocument.body.appendChild(footer);\n// Function to fetch the view count from the Cloudflare Worker\nasync function fetchViewCount() {\n    try {\n        const response = await fetch(\"https://views.vs.workers.dev\");\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        const data = await response.text();\n        return data;\n    } catch (error) {\n        console.error(\"Error fetching view count:\", error);\n        return \"Unavailable\";\n    }\n}\n// Function to format a number with commas as thousands separators\nfunction formatWithCommas(number) {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n// Function to update view count on the page\nfunction updateViewCount() {\n    fetchViewCount().then((viewCount)=>{\n        let viewCountButton = document.getElementById(\"viewCountButton\");\n        // Clear the current text and update with new view count\n        viewCountButton.textContent = `Views: ${formatWithCommas(viewCount)}`;\n    });\n}\n// Update the view count immediately when the page loads\nupdateViewCount();\n\n//# sourceMappingURL=index.8374dac9.js.map\n","// Create footer element\nvar footer = document.createElement('footer');\nfooter.style.padding = '1rem';\nfooter.style.position = 'relative';\nfooter.style.bottom = '0';\nfooter.style.width = '100%';\n\n// Create div for row\nvar rowDiv = document.createElement('div');\nrowDiv.style.display = 'flex';\nrowDiv.style.justifyContent = 'flex-end';\nrowDiv.style.margin = '0.5rem';\n\n// Create div for column\nvar colDiv = document.createElement('div');\ncolDiv.style.flex = '0 0 auto';\n\n// Create button\nvar button = document.createElement('div');\nbutton.style.backgroundColor = 'transparent';\nbutton.style.color = '#6c757d';\nbutton.style.border = '0';\nbutton.id = 'viewCountButton'; // Add an id to the button for later reference\n\n// Create anchor\nvar anchor = document.createElement('div');\n\n// Append elements\nbutton.appendChild(anchor);\ncolDiv.appendChild(button);\nrowDiv.appendChild(colDiv);\nfooter.appendChild(rowDiv);\n\n// Append footer to body (or any other parent element)\ndocument.body.appendChild(footer);\n\n// Function to fetch the view count from the Cloudflare Worker\nasync function fetchViewCount() {\n    try {\n        const response = await fetch('https://views.vs.workers.dev');\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.text();\n        return data;\n    } catch (error) {\n        console.error('Error fetching view count:', error);\n        return 'Unavailable';\n    }\n}\n\n// Function to format a number with commas as thousands separators\nfunction formatWithCommas(number) {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\n// Function to update view count on the page\nfunction updateViewCount() {\n    fetchViewCount().then(viewCount => {\n        let viewCountButton = document.getElementById('viewCountButton');\n        // Clear the current text and update with new view count\n        viewCountButton.textContent = `Views: ${formatWithCommas(viewCount)}`;\n    });\n}\n\n// Update the view count immediately when the page loads\nupdateViewCount();\n"],"names":["footer","document","createElement","style","padding","position","bottom","width","rowDiv","display","justifyContent","margin","colDiv","flex","button","backgroundColor","color","border","id","anchor","fetchViewCount","response","fetch","ok","Error","status","text","error","console","appendChild","body","then","viewCount","viewCountButton","getElementById","textContent","number","toString","replace"],"version":3,"file":"index.8374dac9.js.map"}