{"mappings":"AACA,MAAMA,EAAYC,SAASC,eAAe,cACpCC,EAAeF,SAASC,eAAe,iBACvCE,EAAcH,SAASC,eAAe,YACtCG,EAAcJ,SAASC,eAAe,iBAGtCI,EAAgB,GAGhBC,EAAgB,kBAGtBJ,EAAaK,iBAAiB,SAK9BC,eAA6BC,GAC5BA,EAAMC,iBAGN,MAAMC,EAASZ,EAAUa,MAAMC,OAGzBC,EAASV,EAAYQ,MAAMC,OAGjC,IAAKC,EAEJ,YADAX,EAAYY,YAAc,2BAG3B,IAAKT,EAAcU,KAAKF,GAEvB,YADAX,EAAYY,YAAc,mBAK3BZ,EAAYY,YAAc,GAG1BZ,EAAYY,YAAc,aAE1B,IAEC,MAAME,QAoBRT,eAA8BG,EAAQG,GAErC,MAAMI,EAAc,CACnBC,MAAO,gBACPC,SAAU,IACNf,EAAcgB,KAAIC,IAAY,CAAEC,KAAM,O,QAAQD,MACjD,CAAEC,KAAM,OAAQD,QAASX,IAE1Ba,YAAa,GACbC,WAAY,IACZC,MAAO,EACPC,kBAAmB,EACnBC,iBAAkB,GAIbC,EAAU,CACfC,OAAQ,OACRC,QAAS,CACR,eAAgB,mBAChBC,cAAe,UAAUlB,KAE1BmB,KAAMC,KAAKC,UAAUjB,IAIhBkB,QAAiBC,MAAM,6CAA8CR,GAI3E,aAHmBO,EAASE,QAGhBC,QAAQ,GAAGC,QAAQlB,OAChC,CAnD2BmB,CAAc9B,EAAQG,GAG/CT,EAAcqC,KAAKzB,GACnBd,EAAYwC,UAAYtC,EACtBgB,KAAKV,GAAW,2BAA2BA,UAC3CiC,KAAK,IACP7C,EAAUa,MAAQ,EACnB,CAAE,MAAOiC,GACRC,QAAQD,MAAMA,EACf,CACD,IAxCA9C,EAAUQ,iBAAiB,WA0C3B,SAAwBE,GACL,UAAdA,EAAMsC,MACTtC,EAAMC,iBACNR,EAAa8C,QAEf","sources":["src/scripts/chat.js"],"sourcesContent":["// Get elements\nconst inputText = document.getElementById(\"input-text\"); // Text input\nconst submitButton = document.getElementById(\"submit-button\"); // Submit button\nconst responseDiv = document.getElementById(\"response\"); // Response div\nconst apiKeyInput = document.getElementById(\"api-key-input\"); // API key input\n\n// Initialize prompt history\nconst promptHistory = [];\n\n// Define regex pattern for API key validation\nconst apiKeyPattern = /^sk-[A-Za-z0-9]/;\n\n// Add event listener to submit button\nsubmitButton.addEventListener(\"click\", handleSubmit);\n\n// Add event listener to input text element\ninputText.addEventListener(\"keydown\", handleKeyDown);\n\nasync function handleSubmit (event) {\n\tevent.preventDefault(); // Prevent default form submission behavior\n\n\t// Get input text\n\tconst prompt = inputText.value.trim();\n\n\t// Get API key\n\tconst apiKey = apiKeyInput.value.trim();\n\n\t// Validate API key\n\tif (!apiKey) {\n\t\tresponseDiv.textContent = \"Please enter an API key\";\n\t\treturn;\n\t}\n\tif (!apiKeyPattern.test(apiKey)) {\n\t\tresponseDiv.textContent = \"Invalid API key\";\n\t\treturn;\n\t}\n\n\t// Clear any previous error messages\n\tresponseDiv.textContent = \"\";\n\n\t// Show loading message\n\tresponseDiv.textContent = \"Loading...\";\n\n\ttry {\n\t\t// Make API request\n\t\tconst aiResponse = await getAIResponse(prompt, apiKey);\n\n\t\t// Display response\n\t\tpromptHistory.push(aiResponse);\n\t\tresponseDiv.innerHTML = promptHistory\n\t\t\t.map((prompt) => `<p class=\"chat-message\">${prompt}</p>`)\n\t\t\t.join(\"\");\n\t\tinputText.value = \"\";\n\t} catch (error) {\n\t\tconsole.error(error);\n\t}\n}\n\nfunction handleKeyDown (event) {\n\tif (event.key === \"Enter\") {\n\t\tevent.preventDefault();\n\t\tsubmitButton.click();\n\t}\n}\n\nasync function getAIResponse (prompt, apiKey) {\n\t// Set request data\n\tconst requestData = {\n\t\tmodel: \"gpt-3.5-turbo\",\n\t\tmessages: [\n\t\t\t...promptHistory.map(content => ({ role: 'user', content })),\n\t\t\t{ role: 'user', content: prompt }\n\t\t],\n\t\ttemperature: 0.7,\n\t\tmax_tokens: 160,\n\t\ttop_p: 1,\n\t\tfrequency_penalty: 0,\n\t\tpresence_penalty: 0\n\t};\n\n\t// Set fetch options\n\tconst options = {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t\tAuthorization: `Bearer ${apiKey}`\n\t\t},\n\t\tbody: JSON.stringify(requestData)\n\t};\n\n\t// Make API request\n\tconst response = await fetch(\"https://api.openai.com/v1/chat/completions\", options);\n\tconst data = await response.json();\n\n\t// Return AI response\n\treturn data.choices[0].message.content;\n}\n"],"names":["$062f29282c0d813b$var$inputText","document","getElementById","$062f29282c0d813b$var$submitButton","$062f29282c0d813b$var$responseDiv","$062f29282c0d813b$var$apiKeyInput","$062f29282c0d813b$var$promptHistory","$062f29282c0d813b$var$apiKeyPattern","addEventListener","async","event","preventDefault","prompt","value","trim","apiKey","textContent","test","aiResponse","requestData","model","messages","map","content","role","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","options","method","headers","Authorization","body","JSON","stringify","response","fetch","json","choices","message","$062f29282c0d813b$var$getAIResponse","push","innerHTML","join","error","console","key","click"],"version":3,"file":"chat.8279ce6f.js.map"}